(()=>{"use strict";var t=1e-6,e="undefined"!=typeof Float32Array?Float32Array:Array;function i(){var t=new e(16);return e!=Float32Array&&(t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0),t[0]=1,t[5]=1,t[10]=1,t[15]=1,t}function r(t){return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=1,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=1,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t}function n(t,e,i){var r=e[0],n=e[1],s=e[2],o=e[3],a=e[4],h=e[5],u=e[6],c=e[7],f=e[8],p=e[9],d=e[10],l=e[11],m=e[12],v=e[13],g=e[14],w=e[15],x=i[0],y=i[1],b=i[2],P=i[3];return t[0]=x*r+y*a+b*f+P*m,t[1]=x*n+y*h+b*p+P*v,t[2]=x*s+y*u+b*d+P*g,t[3]=x*o+y*c+b*l+P*w,x=i[4],y=i[5],b=i[6],P=i[7],t[4]=x*r+y*a+b*f+P*m,t[5]=x*n+y*h+b*p+P*v,t[6]=x*s+y*u+b*d+P*g,t[7]=x*o+y*c+b*l+P*w,x=i[8],y=i[9],b=i[10],P=i[11],t[8]=x*r+y*a+b*f+P*m,t[9]=x*n+y*h+b*p+P*v,t[10]=x*s+y*u+b*d+P*g,t[11]=x*o+y*c+b*l+P*w,x=i[12],y=i[13],b=i[14],P=i[15],t[12]=x*r+y*a+b*f+P*m,t[13]=x*n+y*h+b*p+P*v,t[14]=x*s+y*u+b*d+P*g,t[15]=x*o+y*c+b*l+P*w,t}Math.random,Math.PI,Math.hypot||(Math.hypot=function(){for(var t=0,e=arguments.length;e--;)t+=arguments[e]*arguments[e];return Math.sqrt(t)});var s;class o{constructor(t){this.viewMatrix=i(),this.projMatrix=i(),this.viewProjMatrix=i(),this.camPosition=[0,0,1],this.lookDirection=[0,0,0],this.upDirection=[0,1,0],this.left=-4,this.right=4,this.bottom=-4,this.top=4,this.near=.1,this.far=8,this.fovy=Math.PI/2,this.typeOfProjection="perspective",this.aspect=t.width/t.height}set projectionType(t){if("orthogonal"!==t&&"perspective"!==t)throw new Error("Invalid type of projection.");this.typeOfProjection=t}updateViewMatrix(){r(this.viewMatrix),function(e,i,n,s){var o,a,h,u,c,f,p,d,l,m,v=i[0],g=i[1],w=i[2],x=s[0],y=s[1],b=s[2],P=n[0],M=n[1],U=n[2];Math.abs(v-P)<t&&Math.abs(g-M)<t&&Math.abs(w-U)<t?r(e):(p=v-P,d=g-M,l=w-U,o=y*(l*=m=1/Math.hypot(p,d,l))-b*(d*=m),a=b*(p*=m)-x*l,h=x*d-y*p,(m=Math.hypot(o,a,h))?(o*=m=1/m,a*=m,h*=m):(o=0,a=0,h=0),u=d*h-l*a,c=l*o-p*h,f=p*a-d*o,(m=Math.hypot(u,c,f))?(u*=m=1/m,c*=m,f*=m):(u=0,c=0,f=0),e[0]=o,e[1]=u,e[2]=p,e[3]=0,e[4]=a,e[5]=c,e[6]=d,e[7]=0,e[8]=h,e[9]=f,e[10]=l,e[11]=0,e[12]=-(o*v+a*g+h*w),e[13]=-(u*v+c*g+f*w),e[14]=-(p*v+d*g+l*w),e[15]=1)}(this.viewMatrix,this.camPosition,this.lookDirection,this.upDirection)}updateProjMatrix(){r(this.projMatrix),"perspective"==this.typeOfProjection?function(t,e,i,r,n){var s,o=1/Math.tan(e/2);t[0]=o/i,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=o,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[11]=-1,t[12]=0,t[13]=0,t[15]=0,null!=n&&n!==1/0?(s=1/(r-n),t[10]=(n+r)*s,t[14]=2*n*r*s):(t[10]=-1,t[14]=-2*r)}(this.projMatrix,this.fovy,this.aspect,this.near,this.far):function(t,e,i,r,n,s,o){var a=1/(e-i),h=1/(r-n),u=1/(s-o);t[0]=-2*a,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=-2*h,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=2*u,t[11]=0,t[12]=(e+i)*a,t[13]=(n+r)*h,t[14]=(o+s)*u,t[15]=1}(this.projMatrix,1024*this.left/768,1024*this.right/768,this.bottom,this.top,this.near,this.far)}getViewProjection(){return this.updateViewMatrix(),this.updateProjMatrix(),r(this.viewProjMatrix),n(this.viewProjMatrix,this.projMatrix,this.viewMatrix),this.viewProjMatrix}}function a(t,i,r){var n=new e(3);return n[0]=t,n[1]=i,n[2]=r,n}s=new e(3),e!=Float32Array&&(s[0]=0,s[1]=0,s[2]=0);class h{constructor(t,e,i,r){let n;this.buffers=[],this.changed=!0,this._depth=!1,"line-strip"!==r&&"triangle-strip"!==r||(n="uint32"),this.pipelineDescriptor={vertex:{module:t.createShaderModule({code:e}),entryPoint:"main",buffers:this.buffers},fragment:{module:t.createShaderModule({code:i}),entryPoint:"main",targets:[{format:"bgra8unorm"}]},primitive:{topology:r,stripIndexFormat:n},layout:"auto"},this.device=t}get depth(){return this._depth}enableDepthTest(){this.pipelineDescriptor.depthStencil={format:"depth24plus",depthWriteEnabled:!0,depthCompare:"less"},this._depth=!0,this.changed=!0}setLayout(t){this.changed=!0,this.pipelineDescriptor.layout=t}addVertexBuffer(...t){this.changed=!0;const e={},i=[];let r=0;for(const e of t)i.push({shaderLocation:e.location,format:e.format||"float32x3",offset:r}),r+=this.stride(e.format||"float32x3");e.arrayStride=r,e.attributes=i,this.buffers.push(e)}stride(t){return t.includes("x")?Number(t.slice(-4,-2))*Number(t[t.length-1])/8:Number(t.slice(-2))/8}get renderPipeline(){return this.changed&&(this.render_pipeline=this.device.createRenderPipeline(this.pipelineDescriptor),this.changed=!1),this.render_pipeline}}h.createGPUBuffer=(t,e,i=GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_DST)=>{const r=t.createBuffer({size:e.byteLength,usage:i,mappedAtCreation:!0});return new Float32Array(r.getMappedRange()).set(e),r.unmap(),r},h.createGPUBufferUint=(t,e,i=GPUBufferUsage.INDEX|GPUBufferUsage.COPY_DST)=>{const r=t.createBuffer({size:e.byteLength,usage:i,mappedAtCreation:!0});return new Uint32Array(r.getMappedRange()).set(e),r.unmap(),r};class u{constructor(t,e=3){this.arrays=[],this.buffers=[],this.pos=a(0,0,0),this.scale=a(1,1,1),this.rotationAngles=a(0,0,0),this.model_matrix=i(),this.stride=e,this.device=t}get modelMatrix(){return this.createTransforms(),this.model_matrix}get numberOfVertex(){return this.arrays[0].length/this.stride}appendBuffer(t){this.arrays.push(t),this.buffers.push(h.createGPUBuffer(this.device,t))}createTransforms(){r(this.model_matrix);const t=i(),e=i(),s=i(),o=i(),a=i();!function(t,e){t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=1,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=1,t[11]=0,t[12]=e[0],t[13]=e[1],t[14]=e[2],t[15]=1}(o,this.pos),function(t,e){var i=Math.sin(e),r=Math.cos(e);t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=r,t[6]=i,t[7]=0,t[8]=0,t[9]=-i,t[10]=r,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1}(t,this.rotationAngles[0]),function(t,e){var i=Math.sin(e),r=Math.cos(e);t[0]=r,t[1]=0,t[2]=-i,t[3]=0,t[4]=0,t[5]=1,t[6]=0,t[7]=0,t[8]=i,t[9]=0,t[10]=r,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1}(e,this.rotationAngles[1]),function(t,e){var i=Math.sin(e),r=Math.cos(e);t[0]=r,t[1]=i,t[2]=0,t[3]=0,t[4]=-i,t[5]=r,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=1,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1}(s,this.rotationAngles[2]),function(t,e){t[0]=e[0],t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=e[1],t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=e[2],t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1}(a,this.scale),n(this.model_matrix,t,a),n(this.model_matrix,e,this.model_matrix),n(this.model_matrix,s,this.model_matrix),n(this.model_matrix,o,this.model_matrix)}setBuffers(t){for(let e=0;e<this.buffers.length;e++)t.setVertexBuffer(e,this.buffers[e])}}class c extends u{constructor(t,e,i=3){super(t,i),this.indexes=e,this.indexBuffer=h.createGPUBufferUint(t,e)}get numberOfVertex(){return this.indexes.length}setBuffers(t){super.setBuffers(t),t.setIndexBuffer(this.indexBuffer,"uint32")}static calculateNormals(t,e,i=3,r=0){const n=new Array(e.length/i*4).fill(0);for(let h=0;h<t.length;h+=3){const u=t[h],c=t[h+1],f=t[h+2],p=a(e[u*i+r],e[u*i+r+1],e[u*i+r+2]),d=a(e[c*i+r],e[c*i+r+1],e[c*i+r+2]),l=a(e[f*i+r],e[f*i+r+1],e[f*i+r+2]),m=(s=a(d[0]-p[0],d[1]-p[1],d[2]-p[2]),o=a(l[0]-p[0],l[1]-p[1],l[2]-p[2]),a(s[1]*o[2]-s[2]*o[1],s[2]*o[0]-s[0]*o[2],s[0]*o[1]-s[1]*o[0]));n[4*u]+=m[0],n[4*u+1]+=m[1],n[4*u+2]+=m[2],n[4*c]+=m[0],n[4*c+1]+=m[1],n[4*c+2]+=m[2],n[4*f]+=m[0],n[4*f+1]+=m[1],n[4*f+2]+=m[2]}var s,o;return new Float32Array(n)}}class f{constructor(t,e,i){this.uniforms=[],this.bindGroups=new d,this.using_mvp=!1,this.pipeline=e,i&&(this.mesh=i),this.device=t}appendUniformBuffer(t,e,...i){if(0===i.length)throw new Error("The data can't be undefined.");let r=0;const n=function(t){let e=0;for(let i of t)i.length>e&&(e=i.length);return e}(i);let s=1,o=0;for(const t of i)o+t.length>n&&(s++,o=0),o+=t.length;r=s*n*4;const a=this.device.createBuffer({size:r,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST});this.bindGroups.add(this.device,t,e,r,a),this.uniforms.push(new p(a,i,n)),this.pipeline.setLayout(this.device.createPipelineLayout({bindGroupLayouts:this.bindGroups.getLayouts()}))}setBindGroups(t){for(const e of this.bindGroups.groups.entries())t.setBindGroup(Number(e[0]),e[1].group)}writeUniforms(){for(const t of this.uniforms){let e=0,i=0,r=0;for(const n of t.information)i+n.length>t.max&&(r++,i=0,e=r*t.max*4),this.device.queue.writeBuffer(t.buffer,e,n),i+=n.length,e+=4*n.length}}getRenderPass(t,e,i){const r={colorAttachments:[{clearValue:[0,0,0,1],storeOp:"store",loadOp:"clear",view:e.getCurrentTexture().createView()}]};if(this.pipeline.depth){if(!i)throw new Error("Depth texture is needed.");const t={view:i.createView(),depthStoreOp:"store",depthClearValue:1,depthLoadOp:"clear"};r.depthStencilAttachment=t}return t.beginRenderPass(r)}draw(t,e,i){if(!this.mesh&&!i)throw new Error("unknown number of vertices.");this.writeUniforms();const r=this.device.createCommandEncoder(),n=this.getRenderPass(r,t,e);n.setPipeline(this.pipeline.renderPipeline),this.mesh&&this.mesh.setBuffers(n),this.setBindGroups(n),this.mesh&&this.mesh instanceof c?n.drawIndexed(this.mesh.numberOfVertex):n.draw(this.mesh.numberOfVertex||i),n.end(),this.device.queue.submit([r.finish()])}}class p{constructor(t,e,i){this.buffer=t,this.information=e,this.max=i}}class d{constructor(){this.groups=new Map}add(t,e,i,r,n){var s;this.groups.get(i)||this.groups.set(i,new l),null===(s=this.groups.get(i))||void 0===s||s.newEntry(t,e,r,n)}getLayouts(){const t=[];for(let e of this.groups.values())t.push(e.layout);return t}}class l{constructor(){this.layoutEntries=new Map,this.entries=new Map}newEntry(t,e,i,r){this.layoutEntries.set(e,{binding:e,visibility:GPUShaderStage.VERTEX|GPUShaderStage.FRAGMENT,buffer:{}}),this.entries.set(e,{binding:e,resource:{buffer:r,offset:0,size:i}}),this.layout=t.createBindGroupLayout({entries:this.layoutEntries.values()}),this.group=t.createBindGroup({layout:this.layout,entries:this.entries.values()})}}var m=function(t,e,i,r){return new(i||(i=Promise))((function(n,s){function o(t){try{h(r.next(t))}catch(t){s(t)}}function a(t){try{h(r.throw(t))}catch(t){s(t)}}function h(t){var e;t.done?n(t.value):(e=t.value,e instanceof i?e:new i((function(t){t(e)}))).then(o,a)}h((r=r.apply(t,e||[])).next())}))};class v{constructor(){this.isAnimation=!0}init(){return m(this,void 0,void 0,(function*(){yield this.initGPU(),this.depthTexture=this.device.createTexture({format:"depth24plus",usage:GPUTextureUsage.RENDER_ATTACHMENT,size:[this.canvas.width,this.canvas.height,1]})}))}checkWebGPU(){return navigator.gpu?"webGPU suportado":"webGPU não suportado"}initGPU(){var t;return m(this,void 0,void 0,(function*(){const e=this.checkWebGPU();if("webGPU não suportado"===e)throw console.log(e),"Seu navegador atual não suporta webGPU!";this.canvas=document.querySelector("#canvas-webgpu");const i=window.devicePixelRatio||1;this.canvas.width=1024*i,this.canvas.height=768*i;const r=yield null===(t=navigator.gpu)||void 0===t?void 0:t.requestAdapter();this.device=yield null==r?void 0:r.requestDevice(),this.context=this.canvas.getContext("webgpu"),this.context.configure({device:this.device,format:"bgra8unorm",alphaMode:"premultiplied"})}))}static build(){return m(this,void 0,void 0,(function*(){const t=new v;return yield t.init(),t}))}}v.build().then((t=>{const e={positions:new Float32Array([-1,-1,1,1,-1,1,1,1,1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,-1,1,1,1,1,-1,1,-1,-1,-1,-1,1,-1,1,1,-1,1,1,-1,1,-1,-1,-1,-1,-1,-1,-1,1,-1,1,1,-1,1,-1,-1,1,-1,-1,-1,-1,-1,-1,1,-1,1,1,1,1,1,1,1,-1,1,1,-1,-1,1,-1,-1,1,1,-1,-1,1,-1,-1,-1,1,-1,-1,1,-1,-1,1,-1,1,-1,-1,1]),colors:new Float32Array([0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1])},r=new u(t.device,3);r.appendBuffer(e.positions),r.appendBuffer(e.colors);const s="\n        @group(0) @binding(0)\n            var<uniform> mvpMatrix: mat4x4<f32>;\n\n        struct Input{\n            @location(0) position: vec4<f32>,\n            @location(1) vColor: vec4<f32>,\n        }\n\n        struct Output{\n            @builtin(position) position: vec4<f32>,\n            @location(0) vColor: vec4<f32>,\n        }\n\n        @vertex\n        fn main(in: Input) -> Output {\n            var out: Output;\n            //var uniforms: Uniforms;\n\n            out.position = mvpMatrix * in.position;\n            out.vColor = in.vColor;\n\n            return out;\n        }\n    ",a="  \n        @fragment\n        fn main(@location(0) vColor: vec4<f32>) -> @location(0) vec4<f32> {\n            return vColor;\n        }\n    ",c=new h(t.device,s,a,"triangle-list");c.enableDepthTest(),c.addVertexBuffer({location:0}),c.addVertexBuffer({location:1});const p=new o(t.canvas);p.projectionType="orthogonal",p.camPosition=[2,2,-6];const d=new f(t.device,c,r),l=i();n(l,p.getViewProjection(),r.modelMatrix),d.appendUniformBuffer(0,0,new Float32Array(l)),d.draw(t.context,t.depthTexture),document.addEventListener("keypress",(e=>{"p"==e.key?(p.projectionType="perspective",n(l,p.getViewProjection(),r.modelMatrix),d.appendUniformBuffer(0,0,new Float32Array(l)),d.draw(t.context,t.depthTexture)):"o"==e.key&&(p.projectionType="orthogonal",n(l,p.getViewProjection(),r.modelMatrix),d.appendUniformBuffer(0,0,new Float32Array(l)),d.draw(t.context,t.depthTexture))}))}))})();
//# sourceMappingURL=main.bundle.js.map