(()=>{"use strict";const e=()=>{return e=void 0,t=void 0,o=function*(){var e;const t=navigator.gpu?"webGPU suportado":"webGPU não suportado";if("webGPU não suportado"===t)throw console.log(t),"Seu navegador atual não suporta webGPU!";const n=document.querySelector("#canvas-webgpu"),o=window.devicePixelRatio||1;n.width=1024*o,n.height=768*o;const r=yield null===(e=navigator.gpu)||void 0===e?void 0:e.requestAdapter(),a=yield null==r?void 0:r.requestDevice(),i=n.getContext("webgpu"),u="bgra8unorm";return i.configure({device:a,format:u,alphaMode:"premultiplied"}),{device:a,canvas:n,swapChainFormat:u,context:i}},new((n=void 0)||(n=Promise))((function(r,a){function i(e){try{c(o.next(e))}catch(e){a(e)}}function u(e){try{c(o.throw(e))}catch(e){a(e)}}function c(e){var t;e.done?r(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,u)}c((o=o.apply(e,t||[])).next())}));var e,t,n,o};var t,n;n=function*(){const t=yield e(),n=t.device,o=new Float32Array([-.5,-.5,1,0,0,.5,-.5,0,1,0,.5,.5,1,0,0,-.5,.5,0,0,1]),r=new Uint32Array([0,1,3,3,1,2]),a=((e,t,n=GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_DST)=>{const o=e.createBuffer({size:t.byteLength,usage:n,mappedAtCreation:!0});return new Float32Array(o.getMappedRange()).set(t),o.unmap(),o})(n,o),i=((e,t,n=GPUBufferUsage.INDEX|GPUBufferUsage.COPY_DST)=>{const o=e.createBuffer({size:t.byteLength,usage:n,mappedAtCreation:!0});return new Uint32Array(o.getMappedRange()).set(t),o.unmap(),o})(n,r),u="\n        struct Input{\n            @location(0) position: vec4<f32>,\n            @location(1) vColor: vec4<f32>,\n        }\n\n        struct Output{\n            @builtin(position) position: vec4<f32>,\n            @location(0) vColor: vec4<f32>,\n        }\n\n        @vertex\n        fn main(in: Input) -> Output {\n            var out: Output;\n            out.position=in.position;\n            out.vColor=in.vColor;\n            return out;\n        }\n    ",c="  \n        @fragment\n        fn main(@location(0) vColor: vec4<f32>) -> @location(0) vec4<f32> {\n            return vColor;\n        }\n    ",s=n.createRenderPipeline({vertex:{module:n.createShaderModule({code:u}),entryPoint:"main",buffers:[{arrayStride:20,attributes:[{shaderLocation:0,format:"float32x2",offset:0},{shaderLocation:1,format:"float32x3",offset:8}]}]},fragment:{module:n.createShaderModule({code:c}),entryPoint:"main",targets:[{format:t.swapChainFormat}]},primitive:{topology:"triangle-list"},layout:"auto"}),f=n.createCommandEncoder(),d=t.context.getCurrentTexture().createView(),l=f.beginRenderPass({colorAttachments:[{clearValue:[0,0,0,1],storeOp:"store",loadOp:"clear",view:d}]});l.setPipeline(s),l.setVertexBuffer(0,a),l.setIndexBuffer(i,"uint32"),l.drawIndexed(6),l.end(),n.queue.submit([f.finish()])},new((t=void 0)||(t=Promise))((function(e,o){function r(e){try{i(n.next(e))}catch(e){o(e)}}function a(e){try{i(n.throw(e))}catch(e){o(e)}}function i(n){var o;n.done?e(n.value):(o=n.value,o instanceof t?o:new t((function(e){e(o)}))).then(r,a)}i((n=n.apply(void 0,[])).next())}))})();
//# sourceMappingURL=main.bundle.js.map