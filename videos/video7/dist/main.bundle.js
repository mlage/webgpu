(()=>{"use strict";const e=()=>{return e=void 0,t=void 0,o=function*(){var e;const t=navigator.gpu?"webGPU suportado":"webGPU não suportado";if("webGPU não suportado"===t)throw console.log(t),"Seu navegador atual não suporta webGPU!";const n=document.querySelector("#canvas-webgpu"),o=window.devicePixelRatio||1;n.width=1024*o,n.height=768*o;const r=yield null===(e=navigator.gpu)||void 0===e?void 0:e.requestAdapter(),a=yield null==r?void 0:r.requestDevice(),i=n.getContext("webgpu"),u="bgra8unorm";return i.configure({device:a,format:u,alphaMode:"premultiplied"}),{device:a,canvas:n,swapChainFormat:u,context:i}},new((n=void 0)||(n=Promise))((function(r,a){function i(e){try{c(o.next(e))}catch(e){a(e)}}function u(e){try{c(o.throw(e))}catch(e){a(e)}}function c(e){var t;e.done?r(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,u)}c((o=o.apply(e,t||[])).next())}));var e,t,n,o},t=(e,t,n=GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_DST)=>{const o=e.createBuffer({size:t.byteLength,usage:n,mappedAtCreation:!0});return new Float32Array(o.getMappedRange()).set(t),o.unmap(),o};var n,o;o=function*(){const n=yield e(),o=n.device,r=new Float32Array([-.5,-.5,.5,-.5,-.5,.5,-.5,.5,.5,-.5,.5,.5]),a=new Float32Array([1,0,0,0,1,0,0,0,1,0,0,1,0,1,0,1,0,0]),i=t(o,r),u=t(o,a),c="\n        struct Input{\n            @location(0) position: vec4<f32>,\n            @location(1) vColor: vec4<f32>,\n        }\n\n        struct Output{\n            @builtin(position) position: vec4<f32>,\n            @location(0) vColor: vec4<f32>,\n        }\n\n        @vertex\n        fn main(in: Input) -> Output {\n            var out: Output;\n            out.position=in.position;\n            out.vColor=in.vColor;\n            return out;\n        }\n    ",s="  \n        @fragment\n        fn main(@location(0) vColor: vec4<f32>) -> @location(0) vec4<f32> {\n            return vColor;\n        }\n    ",l=o.createRenderPipeline({vertex:{module:o.createShaderModule({code:c}),entryPoint:"main",buffers:[{arrayStride:8,attributes:[{shaderLocation:0,format:"float32x2",offset:0}]},{arrayStride:12,attributes:[{shaderLocation:1,format:"float32x3",offset:0}]}]},fragment:{module:o.createShaderModule({code:s}),entryPoint:"main",targets:[{format:n.swapChainFormat}]},primitive:{topology:"triangle-list"},layout:"auto"}),f=o.createCommandEncoder(),d=n.context.getCurrentTexture().createView(),v=f.beginRenderPass({colorAttachments:[{clearValue:[0,0,0,1],storeOp:"store",loadOp:"clear",view:d}]});v.setPipeline(l),v.setVertexBuffer(0,i),v.setVertexBuffer(1,u),v.draw(6),v.end(),o.queue.submit([f.finish()])},new((n=void 0)||(n=Promise))((function(e,t){function r(e){try{i(o.next(e))}catch(e){t(e)}}function a(e){try{i(o.throw(e))}catch(e){t(e)}}function i(t){var o;t.done?e(t.value):(o=t.value,o instanceof n?o:new n((function(e){e(o)}))).then(r,a)}i((o=o.apply(void 0,[])).next())}))})();
//# sourceMappingURL=main.bundle.js.map