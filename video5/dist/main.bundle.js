(()=>{"use strict";var e;const n=(e="point-list")=>{return n=void 0,t=void 0,r=function*(){var n;const t=navigator.gpu?"webGPU suportado":"webGPU não suportado";if("webGPU não suportado"===t)throw console.log(t),"Seu navegador atual não suporta webGPU!";const o=document.querySelector("#canvas-webgpu"),r=window.devicePixelRatio||1;o.width=1024*r,o.height=768*r;const i=yield null===(n=navigator.gpu)||void 0===n?void 0:n.requestAdapter(),a=yield null==i?void 0:i.requestDevice(),c=o.getContext("webgpu"),u="bgra8unorm";let d;c.configure({device:a,format:u,alphaMode:"premultiplied"}),"line-strip"===e&&(d="uint32");const v="\n        const pos: array<vec2<f32>, 9>=  array<vec2<f32>,9>(\n            vec2<f32>(0.18, 0.12),\n            vec2<f32>(-0.18, 0.12),\n            vec2<f32>(0.0, 0.5),\n            vec2<f32>(0.0, 0.0),\n            vec2<f32>(-0.3, 0.0),\n            vec2<f32>(-0.2, -0.2),\n            vec2<f32>(0.2, -0.2),\n            vec2<f32>(0.3, 0.0),\n            vec2<f32>(0.0,0.0)\n        );\n\n        @vertex\n        fn main(@builtin(vertex_index) VertexIndex: u32) -> @builtin(position) vec4<f32> \n        {\n            return vec4<f32>(pos[VertexIndex], 0.0, 1.0);\n        }\n    ",l="  \n        @fragment\n        fn main() -> @location(0) vec4<f32> {\n            return vec4<f32>(1.0, 1.0, 1.0, 1.0);\n        }\n    ",s=a.createRenderPipeline({vertex:{module:a.createShaderModule({code:v}),entryPoint:"main"},fragment:{module:a.createShaderModule({code:l}),entryPoint:"main",targets:[{format:u}]},primitive:{topology:e,stripIndexFormat:d},layout:"auto"}),f=a.createCommandEncoder(),p=c.getCurrentTexture().createView(),m=f.beginRenderPass({colorAttachments:[{clearValue:[0,0,0,1],storeOp:"store",loadOp:"clear",view:p}]});m.setPipeline(s),m.draw(9),m.end(),a.queue.submit([f.finish()])},new((o=void 0)||(o=Promise))((function(e,i){function a(e){try{u(r.next(e))}catch(e){i(e)}}function c(e){try{u(r.throw(e))}catch(e){i(e)}}function u(n){var t;n.done?e(n.value):(t=n.value,t instanceof o?t:new o((function(e){e(t)}))).then(a,c)}u((r=r.apply(n,t||[])).next())}));var n,t,o,r};null===(e=document.querySelector("#primitives"))||void 0===e||e.addEventListener("change",(e=>{const t=e.target,o=t.options[t.selectedIndex].value;n(o)})),n("line-strip")})();
//# sourceMappingURL=main.bundle.js.map